---
apiVersion: v1
kind: ConfigMap
metadata:
  name: genesis-{{ .Values.node.name }}
  namespace: {{ .Values.metadata.namespace }}
  labels:
    app.kubernetes.io/name: genesis-{{ .Values.node.name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- include "labels.custom" . | nindent 2 }}
data:
  genesis.json.base64: {{ .Values.genesis | quote }}
  orion.conf: |-
    nodeurl = "{{ .Values.orion.url }}:{{ .Values.proxy.nodeport }}/"
    nodeport = {{ .Values.orion.ports.nodeport }}
    nodenetworkinterface = "0.0.0.0"
    clientnetworkinterface = "0.0.0.0"
    clienturl = "{{ .Values.orion.url }}:{{ .Values.proxy.clientport }}/"
    clientport = {{ .Values.orion.ports.clientport }}
    publickeys = ["/secrets/orion_key.pub"]
    privatekeys = ["/secrets/orion_key.key"]
    passwords = "/secrets/passwordFile"
    othernodes = [{{ .Values.orion.nodelist }}]
{{- if $.Values.orion.tls }}
    tls = "strict"
    clientconnectiontls = "strict"
    tlsclienttrust = "ca"
    tlsservertrust = "ca"
    tlsservercert = "/secrets/orion_cer.pem"
    tlsserverchain = ["/secrets/orion_ca.pem"]
    tlsserverkey = "/secrets/orion_cer.key"
    tlsclientcert = "/secrets/orion_cer.pem"
    tlsclientchain = ["/secrets/orion_ca.pem"]
    tlsclientkey = "/secrets/orion_cer.key"
    clientconnectiontlsservercert = "/secrets/orion_cer.pem"
    clientconnectiontlscertchain = []
    clientconnectiontlsserverkey = "/secrets/orion_cer.key"
    clientconnectiontlsservertrust = "ca"
{{- else }}
    tls = "off"
{{- end }}
