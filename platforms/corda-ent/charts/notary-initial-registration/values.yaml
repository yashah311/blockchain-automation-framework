# Default values for Notary Registration job.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

deployment:
  annotations: {}

# Provide the name of the node
# Eg. nodeName: notary
nodeName:

# This section contains the Enterprise-Corda node metadata.
metadata:
  # Provide the namespace for the Corda node.
  # Eg. namespace: cenm
  namespace:
  # Provide the labels to the Corda node.
  labels:

pvc:
  #   annotations:
  #     key: "value"
  annotations: {}

# This section contains the storage information.
storage:
  # Provide the name of the storageclass.
  # NOTE: Make sure that the storageclass exist prior to this deployment as
  # this chart doesn't create the storageclass.
  # Eg. name: cenm
  name:

# Provide the number of replicas for your pods
# Eg. replicas: 1
replicas:

# Provide image for init container
image:
  # Provide the alpine utils image.
  # NOTE: The alpine image used is the base alpine image with CURL installed.
  # Eg. initContainerName: hyperledgerlabs/alpine-utils:1.0
  initContainerName:
  # Provide the docker-registry secret created and stored in kubernetes cluster as a secret.
  # Eg. imagePullSecret: regcred
  imagepullsecret:

# Provide image for idman container
dockerImage:
  # EX. name: corda/notary
  name: 
  # Ex tag: 1.2-zulu-openjdk8u242
  tag: 
  # Ex. pullPolicy: Always
  pullPolicy: 
  # EX. imagePullSecret: cenm-registry
  imagePullSecret: 

# required parameter
# Accept license should be YES.
acceptLicense: YES

# This section contains the vault related information.
# NOTE: Make sure that the vault is already unsealed, intialized and configured to
# use the Kubernetes service account token based authentication.
vault:
  # Provide the vault address
  # Eg. address: http://vault.example.com:8200
  address: 
  # Provide the vault role used.
  # Eg. role: vault-role
  role:
  # Provide the authpath configured to be used.
  # Eg. authpath: entcordacenm
  authpath:
  # Provide the service account name autheticated to vault.
  # NOTE: Make sure that the service account is already created and autheticated to use the vault.
  # Eg. serviceaccountname: vault-auth
  serviceaccountname:
  # Provide the vault path where the  certificates are stored
  # Eg. certsecretprefix: secret/cenm-org-name
  certsecretprefix:
 

# Provide volume related specifications
volume:
 # Ex baseDir: /opt/corda
  baseDir:

# debug option for the bash scripts
# Ex bashDebug: false
bashDebug:

cordaJarMx: 3
devMode: false
p2pPort: 10002

rpcSettingsAddress: "0.0.0.0"
rpcSettingsAddressPort: 10003
rpcSettingsAdminAddress: "localhost"
rpcSettingsAdminAddressPort: 10770
rpcSettingsStandAloneBroker: false
rpcSettingsUseSsl: false

networkServices:
  # idman external url
  # Ex doormanURL: "http://idman-ip:10000"
  doormanURL:
  # nms external url
  # Ex doormanURL: "http://nmap:10000"
  networkMapURL:

notary:
  # is the notary a validator Ex : validating: true
  validating:

# Ex legalName: O=Notary,OU=Notary,L=London,C=GB
legalName:
# Ex emailAddress: dev@baf.com
emailAddress:
  
rpcUsers:
  # rpc user name Ex. notary
  username:
  # rpc user password Ex. notaryP
  password: 

# required parameter
notaryPublicIP: 

sleepTimeAfterError: 120
sleepTime: 0

# where is CENM service jar file stored
jarPath: bin

# where is CENM service configuration file stored
configPath: etc

healthCheckNodePort: 0

jksSource: ""

healthcheck:
  #Provide the interval in seconds you want to iterate till db to be ready
  #Eg. readinesscheckinterval: 5
  readinesscheckinterval:
  #Provide the threshold till you want to check if specified db up and running
  #Eg. readinessthreshold: 2
  readinessthreshold:
