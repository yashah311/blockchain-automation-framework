# Default values for the Networkmap Service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# For each of the example values, the ` `-quotes are to be removed when filling them in,
# these are only used to denote the example value.

# Provide the name of the node
# e.g. `networkmap`
nodeName:

# Provide the name of the corresponding notary; this is needed to get the correct node info files from Vault
# e.g. `notary`
notaryName:

deployment:
  annotations: {}

bashDebug:

pvc:
  #   annotations:
  #     key: "value"
  annotations: {}

metadata:
  # Provide the namespace, e.g. `default`
  namespace: 

# Image for the init-containers
image:
  # Name of the Docker image to use for init-containers, e.g. `index.docker.io/hyperledgerlabs/alpine-utils:1.0`
  initContainerName:
  # Pull secret to use for the Docker image, e.g. `regcred`
  imagepullsecret:

dockerImage:
  # Name of the Docker image to use for the main Networkmap Service, e.g. corda/enterprise-networkmap:1.2-zulu-openjdk8u24
  name:
  # When to pull the image, e.g. `Always`
  pullPolicy:

# required parameter
acceptLicense:

# required for exposing the service externally
ambassador:
  external_url_suffix:
storage:
  # Name for the storage to use, e.g. `abcd`
  name:
# How many replicas to make of this service, e.g. `1`
replicas:

service:
  # # Type of service to use, e.g. `LoadBalancer`
  # type: LoadBalancer
  # Port to use for the service, e.g. `10000`
  port:

serviceInternal:
  # # Type of service to use, e.g. `LoadBalancer`
  # type: LoadBalancer
  # Port to use for the internal service, e.g. `5050`
  port:

# Values for the ssh session into the Networkmap Service
shell:
  # Port to use in sshd service, e.g. `2222`
  sshdPort:
  # User for ssh session, e.g. `nmap`
  user:
  # Password for ssh session, e.g. `password`
  password:

# The folder where the JAR file for CENM service is stored, e.g. `bin`
jarPath:


# The folder where the configuration files for CENM service are stored, e.g. `bin`
configPath:

# Database configuration, for persiting the network information
database:
  # Class name for DB driver, e.g. "org.h2.Driver" (use double quotes!)
  driverClassName:
  # URL for DB , e.g. "jdbc:h2:file:./h2/networkmap-persistence;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=10000;WRITE_DELAY=0;AUTO_SERVER_PORT=0" (use double quotes!)
  url:
  # DB user, e.g. "example-db-user" (use double quotes!)
  user:
  # DB password, e.g. "example-db-password" (use double quotes!)
  password:
  # Whether to run migration, e.g. `true`
  runMigration:

# Whether the NMS will check the certificate revocation list, e.g. `true`
checkRevocation: true

# Values for the Identity Manager (idman)
identityManager:
  # Host of idman, e.g. `idman.{namespace}`
  host:
  # Port of idman, e.g. `5052`
  port:

# Values for the Revocation check
revocation:
  # On which port to check for Revocation, e.g. `5053`
  port:

# How many seconds to sleep after error, e.g. `120`
sleepTimeAfterError:
# How many seconds to sleep after completing setup of service, e.g. `60`
sleepTime:

# Specifies maximum size, in gigabytes, of memory allocation pool when running JAR files
cordaJarMx:

# Which port to use for health check, e.g. `0`
healthCheckNodePort: 0

healthcheck:
  # Provide the interval in seconds you want to iterate until DB is ready, e.g. `5`
  readinesscheckinterval:
  # Provide the threshold till you want to check if specified DB up and running, e.g. `2`
  readinessthreshold:

# Values for HashiCorp Vault
vault:
  # Address of the vault, e.g. `http://vault.internal.dev.aws.blockchaincloudpoc-develop.com:8200`
  address:
  # Which role to use when connecting to vault, e.g. `vault-role`
  role:
  # These two values will be used once Ansible is implemented
  # authpath: 
  # serviceaccountname: 
  # Prefix to use for secret engine for certificates, e.g. `cenm/certs`
  certsecretprefix: 

# Provide volume related specifications
volume:
  # E.g. baseDir: /opt/corda
  baseDir:
