apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nodeName }}
  namespace: {{ .Values.metadata.namespace }}
  {{ if $.Values.ambassador }}
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: Mapping
      name: {{ .Values.nodeName }}
      prefix: /
      host: {{ .Values.nodeName }}.{{ .Values.ambassador.external_url_suffix }}:8443
      service: {{ .Values.nodeName }}.{{ .Values.metadata.namespace }}:{{ .Values.service.port }}
      tls: false
      ---
      apiVersion: ambassador/v1
      kind: TLSContext
      name: {{ .Values.nodeName }}_mapping_tlscontext
      hosts:
      - {{ .Values.nodeName }}.{{ .Values.ambassador.external_url_suffix }}
      secret: {{ .Values.nodeName }}-ambassador-certs
  {{ end }}
  labels:
    run: {{ .Values.nodeName }}
    app.kubernetes.io/name: {{ .Values.nodeName }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app: {{ .Values.nodeName }}
# we need healthCheckNodePort set to get rid of logs pollution
{{- if (.Values.healthCheckNodePort) }}
  healthCheckNodePort: {{ .Values.healthCheckNodePort }}
{{- end }}
  ports:
    - port: {{ .Values.serviceInternal.port }}
      targetPort: {{ .Values.serviceInternal.port }}
      protocol: TCP
      name: issuance
    - port: {{ .Values.serviceRevocation.port }}
      targetPort: {{ .Values.serviceRevocation.port }}
      protocol: TCP
      name: revocation
    - port: {{ .Values.shell.sshdPort }}
      targetPort: {{ .Values.shell.sshdPort }}
      protocol: TCP
      {{- if .Values.shell.nodePort }}
      nodePort: {{ .Values.shell.nodePort }}
      {{- end }}
      name: ssh
    - port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.port }}
      protocol: TCP
      name: main
