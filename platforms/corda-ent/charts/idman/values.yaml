# Default values for Identity Manager service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

deployment:
  annotations: {}

# Provide the name of the node
# Eg. nodeName: idman
nodeName:

# This section contains the Enterprise-Corda node metadata.
metadata:
  # Provide the namespace for the Corda node.
  # Eg. namespace: cenm
  namespace:
  # Provide the labels to the Corda node.
  labels:

pvc:
  #   annotations:
  #     key: "value"
  annotations: {}

# This section contains the storage information.
storage:
  # Provide the name of the storageclass.
  # NOTE: Make sure that the storageclass exist prior to this deployment as
  # this chart doesn't create the storageclass.
  # Eg. name: cenm
  name:

# Provide the number of replicas for your pods
# Eg. replicas: 1
replicas:

# Provide image for init container
image:
  # Provide the alpine utils image.
  # NOTE: The alpine image used is the base alpine image with CURL installed.
  # Eg. initContainerName: hyperledgerlabs/alpine-utils:1.0
  initContainerName:
  # Provide the docker-registry secret created and stored in kubernetes cluster as a secret.
  # Eg. imagePullSecret: regcred
  imagepullsecret:

# Provide image for idman container
dockerImage:
  # EX. name: corda/enterprise-identitymanager
  name: 
  # Ex tag: 1.2-zulu-openjdk8u242
  tag: 
  # Ex. pullPolicy: Always
  pullPolicy: 
  # EX. imagePullSecret: cenm-registry
  imagePullSecret: 

# required parameter
# Accept license should be YES.
acceptLicense: YES

# This section contains the vault related information.
# NOTE: Make sure that the vault is already unsealed, intialized and configured to
# use the Kubernetes service account token based authentication.
vault:
  # Provide the vault address
  # Eg. address: http://vault.example.com:8200
  address: 
  # Provide the vault role used.
  # Eg. role: vault-role
  role:
  # Provide the authpath configured to be used.
  # Eg. authpath: entcordacenm
  authpath:
  # Provide the service account name autheticated to vault.
  # NOTE: Make sure that the service account is already created and autheticated to use the vault.
  # Eg. serviceaccountname: vault-auth
  serviceaccountname:
  # Provide the vault path where the  certificates are stored
  # Eg. certsecretprefix: secret/cenm-org-name
  certsecretprefix:
 

# Provide volume related specifications
volume:
 # Ex baseDir: /opt/corda
  baseDir: 

# idman service 
service:
  # Ex. port: 10000
  port: 

serviceInternal:
  # internal port inside cluster
  # Ex. port: 5052
  port: 

serviceRevocation:
  # Revocation port inside cluster
  # Ex port: 5053
  port: 

# ssh service related configuration
shell:
  # Ex. sshdPort: 2222
  sshdPort: 
  # ssh username
  # Ex. user: idman
  user: 
  # ssh password
  # Ex. idmanP
  password:

# Database configuration
database:
  # Ex. driverClassName: "org.h2.Driver"
  driverClassName:
  # Ex. url: "jdbc:h2:file:./h2/identity-manager-persistence;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=10000;WRITE_DELAY=0;AUTO_SERVER_PORT=0"
  url: 
  # Ex. user: "example-db-user"
  user: 
  # Ex. password: "example-db-password"
  password: 
  # Ex. runMigration: "true"
  runMigration: 

# Specify the maximum size of the memory allocation pool
# cordaJarMx: 1
cordaJarMx: 

# healthCheckNodePort set to get rid of logs pollution
# Ex. healthCheckNodePort: 0
healthCheckNodePort: 

# where is CENM service jar file stored
# Ex. bin
jarPath: 

# where is CENM service configuration file stored
# Ex. etc
configPath: 

# Sleep time after any error encountered in starting idman
# Ex. 120
sleepTimeAfterError:

healthcheck:
  #Provide the interval in seconds you want to iterate till db to be ready
  #Eg. readinesscheckinterval: 10
  readinesscheckinterval: 
  #Provide the threshold till you want to check if specified db up and running
  #Eg. readinessthreshold: 15
  readinessthreshold:
