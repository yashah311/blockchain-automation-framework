# Default values for Notary service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


# debug option for the bash scripts
# Ex bashDebug: false
bashDebug: false

deployment:
  annotations: {}

# Provide the name of the node
# Eg. nodeName: notary
nodeName:

# Provide the legal name of the notary
# Ex. legalName : O=Notary,OU=Notary5,L=London,C=GB
legalName:

# Provide email id
email:

pvc:
  #   annotations:
  #     key: "value"
  annotations: {}

# This section contains the Enterprise-Corda notary metadata.
metadata:
  # Provide the namespace for the Corda notary.
  # Eg. namespace: cenm
  namespace:
  # Provide the labels to the Corda notary.
  labels:

# Provide image for notary container
dockerImage:
  # Ex. name: corda/notary
  name:
  # Ex. tag: 1.2-zulu-openjdk8u242
  tag:
  # Ex. pullPolicy: Always
  pullPolicy:

# required parameter
acceptLicense: YES

# This section contains the storage information.
storage:
  # Provide the name of the storageclass.
  # NOTE: Make sure that the storageclass exist prior to this deployment as
  # this chart doesn't create the storageclass.
  # Eg. name: cenm
  name:

# Provide the number of replicas for your pods
# Eg. replicas: 1
replicas:

# Provide image for init container
image:
  # Provide the alpine utils image.
  # NOTE: The alpine image used is the base alpine image with CURL installed.
  # Eg. initContainerName: hyperledgerlabs/alpine-utils:1.0
  initContainerName:
  # Provide the docker-registry secret created and stored in kubernetes cluster as a secret.
  # Eg. imagePullSecret: regcred
  imagepullsecret:

# Specify the maximum size of the memory allocation pool
# cordaJarMx: 3
cordaJarMx:
# Specify the mode in which want to run 
# Ex. devMode: false
devMode:

# Remote procedure call setting
rpcSettingsAddress: "0.0.0.0"
rpcSettingsAddressPort: 10003
rpcSettingsAdminAddress: "localhost"
rpcSettingsAdminAddressPort: 10770
rpcSettingsStandAloneBroker: false
rpcSettingsUseSsl: false

# Network Services url like idman and nmap
networkServices:
  # Ex. doormanURL: "http://idman-internal.test-kd:10000"
  doormanURL:
  # Ex. networkMapURL: "http://nmap-internal.test-kd:10000"
  networkMapURL:

dataSourceProperties:
  dataSource:
    # Ex. password: "ziAscD0MJnj4n4xkFWY6XuMBuw9bvYC7"
    password:
    # Ex. url: "jdbc:h2:file:./h2/notary-persistence;DB_CLOSE_ON_EXIT=FALSE;WRITE_DELAY=0;LOCK_TIMEOUT=10000"
    url:
    # Ex user: "sa"
    user:
  # Ex data source class name: "org.h2.jdbcx.JdbcDataSource"
  dataSourceClassName:

# This section contains the vault related information.
# NOTE: Make sure that the vault is already unsealed, intialized and configured to
# use the Kubernetes service account token based authentication.
vault:
  # Provide the vault address
  # Eg. address: http://vault.example.com:8200
  address:
  # Provide the vault role used.
  # Eg. role: vault-role
  role:
  # Provide the authpath configured to be used.
  # Eg. authpath: entcordacenm
  authpath:
  # Provide the service account name autheticated to vault.
  # NOTE: Make sure that the service account is already created and autheticated to use the vault.
  # Eg. serviceaccountname: vault-auth
  serviceaccountname:
  # Provide the vault path where the  certificates are stored
  # Eg. certsecretprefix: secret/cenm-ns
  certsecretprefix:

notary:
  # If notary is validating or not
  # Ex. validating: true 
  validating:
  
# RPC  configuration 
rpcUsers:
  # Ex. username: notary
  username:
  # Ex. password: notary
  password:

# required parameter
notaryPublicIP:

# Sleep time after any error encountered in starting idman
# Ex. 120
sleepTimeAfterError:


# where is CENM service jar file stored
# jarPath: bin 
jarPath:

# where is CENM service configuration file stored
# configPath: etc
configPath:

# healthCheckNodePort set to get rid of logs pollution
# Ex. healthCheckNodePort: 0
healthCheckNodePort:

jksSource: ""

volume:
  #Provide the base path
  #Eg. baseDir: /opt/corda
  baseDir:

# Service related specification
service:
  # Ex. p2pPort: 10002
  p2pPort:
  # Ex. sshdPort: 2222
  sshdPort:

healthcheck:
  #Provide the interval in seconds you want to iterate till db to be ready
  #Eg. readinesscheckinterval: 10
  readinesscheckinterval:
  #Provide the threshold till you want to check if specified db up and running
  #Eg. readinessthreshold: 15
  readinessthreshold:
